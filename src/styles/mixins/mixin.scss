@mixin clearfix {
  &:after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin relative {
  position: relative;
  width: 100%;
  height: 100%;
}

@mixin pct($pct) {
  width: #{$pct};
  position: relative;
  margin: 0 auto;
}

@mixin triangle($width, $height, $color, $direction) {
  $width: $width/2;
  $color-border-style: $height solid $color;
  $transparent-border-style: $width solid transparent;
  height: 0;
  width: 0;

  @if $direction==up {
    border-bottom: $color-border-style;
    border-left: $transparent-border-style;
    border-right: $transparent-border-style;
  } @else if $direction==right {
    border-left: $color-border-style;
    border-top: $transparent-border-style;
    border-bottom: $transparent-border-style;
  } @else if $direction==down {
    border-top: $color-border-style;
    border-left: $transparent-border-style;
    border-right: $transparent-border-style;
  } @else if $direction==left {
    border-right: $color-border-style;
    border-top: $transparent-border-style;
    border-bottom: $transparent-border-style;
  }
}

@mixin create-iteration-item($name, $attr, $value) {
  .#{$name} {
    #{$attr}: $value;
  }
}

@mixin create-iteration($key, $attr, $names, $values) {
  @for $i from 1 through length($values) {
    $name: #{$key}-#{nth($names, $i)};
    @include create-iteration-item($name, $attr, #{nth($values, $i)});
  }
}

@mixin scrollBar {
  $size: calc(var(--easy-font-12) / 2);
  $gap: calc(var(--easy-base-space) / 2);
  &::-webkit-scrollbar {
    width: $size;
    height: $size;
  }

  &::-webkit-scrollbar-track {
    border-radius: $size;
    box-shadow: inset 0 0 $gap rgba($color: var(--vt-c-white-mute), $alpha: 1);
  }

  &::-webkit-scrollbar-thumb {
    border-radius: $size;
    background: var(--vt-c-divider-light-1);
    box-shadow: inset 0 0 var(--easy-base-space) rgba($color: var(--vt-c-divider-light-1), $alpha: 1);
  }
}

@mixin ellipsis ($width: 100%) {
  max-width: $width;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}